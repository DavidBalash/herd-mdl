#
# Copyright 2018 herd-mdl contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
AWSTemplateFormatVersion: 2010-09-09
Description: MDL - Security Groups - Installation Template
Parameters:
  VpcIdParameterKey:
    Description: VPC Parameter key name in system store
    Type: AWS::SSM::Parameter::Value<String>
  MDLInstanceName:
    Description: MDLInstanceName name
    Type: String
  Environment:
    Description: Application environment
    Type: String
  EnableSSLAndAuth:
    Default: 'true'
    Description: Whether to enable Authentication/SSL
    Type: String
Conditions:
  EnableSSLAndAuth: !Equals
    - !Ref EnableSSLAndAuth
    - 'true'
  DisableSSLAndAuth: !Equals
    - !Ref EnableSSLAndAuth
    - 'false'
Resources:
  BdsqlEMRServiceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-BdsqlEMRServiceSecurityGroup'
      GroupDescription: Allow SSL & postgress to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8889'
          ToPort: '8889'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5439'
          ToPort: '5439'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !GetAtt
            - MetastorRDSSecurityGroup
            - GroupId
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
  BdsqlEMRSlaveSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-BdsqlEMRSlaveSecurityGroup'
      GroupDescription: Allow https & postgress to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
  BdsqlEMRMasterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-BdsqlEMRMasterSecurityGroup'
      GroupDescription: Allow https & postgress to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5439'
          ToPort: '5439'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8889'
          ToPort: '8889'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
            FromPort: '0'
            ToPort: '65535'
            CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !GetAtt
            - MetastorRDSSecurityGroup
            - GroupId
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
  ElasticSearchSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-ElasticSearchSecurityGroup'
      GroupDescription: 'Allow ssh, http, https & all outgoing traffic'
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8888'
          ToPort: '8888'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
  HerdRDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-HerdRDSSecurityGroup'
      GroupDescription: Allow https to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0
  HerdALBSecurityGroupSSL:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: EnableSSLAndAuth
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-HerdALBSecurityGroup'
      GroupDescription: Allow https to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
  HerdALBSecurityGroupPlainTXT:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: DisableSSLAndAuth
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-HerdALBSecurityGroup'
      GroupDescription: Allow http to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
  BdsqlALBSecurityGroupSSL:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: EnableSSLAndAuth
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-BdsqlALBSecurityGroup'
      GroupDescription: Allow https to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '5439'
          ToPort: '5439'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
  BdsqlALBSecurityGroupPlainTXT:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: DisableSSLAndAuth
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-BdsqlALBSecurityGroup'
      GroupDescription: Allow http to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
  HerdSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-HerdSecurityGroup'
      GroupDescription: Allow https & postgress to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
  MetastorSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-MetastorSecurityGroup'
      GroupDescription: Allow https & mysql to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
  MetastorEMRSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-MetastorEMRSecurityGroup'
      GroupDescription: Allow https & postgress to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
  MetastorRDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Sub '${MDLInstanceName}-${Environment}-MetastorRDSSecurityGroup'
      GroupDescription: Allow https to client host
      VpcId: !Ref VpcIdParameterKey
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0
  MetastorRDSSecurityGroupParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/MetastorRDS
      Type: String
      Value: !GetAtt
        - MetastorRDSSecurityGroup
        - GroupId
      Description: Security Group ID for Metastor RDS Group
  BdsqlEMRMasterSecurityGroupParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/BdsqlEMRMasterSecurityGroup
      Type: String
      Value: !GetAtt
        - BdsqlEMRMasterSecurityGroup
        - GroupId
      Description: Security Group ID for BDSQL EMR Master Security Group
  BdsqlEMRServiceSecurityGroupParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/BdsqlEMRService
      Type: String
      Value: !GetAtt
        - BdsqlEMRServiceSecurityGroup
        - GroupId
      Description: Security Group ID for BDSQL EMR Service Security Group
  BdsqlEMRSlaveSecurityGroupParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/BdsqlEMRSlave
      Type: String
      Value: !GetAtt
        - BdsqlEMRSlaveSecurityGroup
        - GroupId
      Description: Security Group ID for BDSQL EMR Slave Security Group
  ElasticSearchSecurityGroupParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/ElasticSearch
      Type: String
      Value: !GetAtt
        - ElasticSearchSecurityGroup
        - GroupId
      Description: Security Group ID for Elastic Search Group
  HerdRDSSecurityGroupParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/HerdRDS
      Type: String
      Value: !GetAtt
        - HerdRDSSecurityGroup
        - GroupId
      Description: Security Group ID for Herd RDS Group
  HerdALBSecurityGroupParameterSSL:
    Type: 'AWS::SSM::Parameter'
    Condition: EnableSSLAndAuth
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/HerdALB
      Type: String
      Value: !GetAtt
        - HerdALBSecurityGroupSSL
        - GroupId
      Description: Security Group ID for Herd ALB Group
  HerdALBSecurityGroupParameterPlainTXT:
    Type: 'AWS::SSM::Parameter'
    Condition: DisableSSLAndAuth
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/HerdALB
      Type: String
      Value: !GetAtt
        - HerdALBSecurityGroupPlainTXT
        - GroupId
      Description: Security Group ID for Herd ALB Group
  BdsqlALBSecurityGroupParameterSSL:
    Type: 'AWS::SSM::Parameter'
    Condition: EnableSSLAndAuth
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/BdsqlALB
      Type: String
      Value: !GetAtt
        - BdsqlALBSecurityGroupSSL
        - GroupId
      Description: Security Group ID for Herd ALB Group
  BdsqlALBSecurityGroupParameterPlainTXT:
    Type: 'AWS::SSM::Parameter'
    Condition: DisableSSLAndAuth
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/BdsqlALB
      Type: String
      Value: !GetAtt
        - BdsqlALBSecurityGroupPlainTXT
        - GroupId
      Description: Security Group ID for Herd ALB Group
  HerdSecurityGroupParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/Herd
      Type: String
      Value: !GetAtt
        - HerdSecurityGroup
        - GroupId
      Description: Security Group ID for Herd
  MetastorSecurityGroupParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/Metastor
      Type: String
      Value: !GetAtt
        - MetastorSecurityGroup
        - GroupId
      Description: Security Group ID for metastor EC2 Group
  MetastorEMRSecurityGroupParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Join
        - ''
        - - /app/MDL/
          - !Ref MDLInstanceName
          - /
          - !Ref Environment
          - /SecurityGroup/MetastorEMR
      Type: String
      Value: !GetAtt
        - MetastorEMRSecurityGroup
        - GroupId
      Description: Security Group ID for metastor EMR Group
